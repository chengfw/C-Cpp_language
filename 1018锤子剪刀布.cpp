/*输入格式：输入第 1 行给出正整数 N（≤10^5），即双方交锋的次数。
随后 N 行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。
C 代表“锤子”(0)、J 代表“剪刀”(1)、B 代表“布”(2)，第 1 个字母代表甲方，第 2 个代表乙方，中间有 1 个空格。
输出格式：输出第 1、2 行分别给出甲、乙的胜(1)、平(0)、负(2)次数，数字间以 1 个空格分隔。
第 3 行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有 1 个空格。如果解不唯一，则输出按字母序最小的解。
*/
#include<stdio.h>

int sum(int an[3][3], int n) {
	return an[0][n]+an[1][n]+an[2][n];
} 

void res(int h[3][3]) {
	if(h[1][0]>h[0][0] && h[1][0]>h[2][0]) {
		printf("J");
	} else if(h[0][0]>h[2][0]) {
		printf("C");
	} else {
		printf("B");
	}
}
int main() {
	int N;
	scanf("%d", &N);
	int a[3][3] = {0}, b[3][3] = {0}; //C 代表“锤子”(0)、J 代表“剪刀”(1)、B 代表“布”(2);胜(1)、平(0)、负(2)
	char A , B;
	while(N) {
		getchar(); 
		scanf("%c %c", &A, &B);
		if(A == 'C') {
			if(B == 'C') {
				a[0][1]++;
				b[0][1]++;
			} else if(B == 'J') {
				a[0][0]++;
				b[1][2]++;
			} else {
				a[0][2]++;
				b[2][0]++;
			}
		} else if(A == 'J') {
				if(B == 'C') {
				a[1][2]++;
				b[0][0]++;
			} else if(B == 'J') {
				a[1][1]++;
				b[1][1]++;
			} else {
				a[1][0]++;
				b[2][2]++;
			}
		} else {
			if(B == 'C') {
				a[2][0]++;
				b[0][2]++;
			} else if(B == 'J') {
				a[2][2]++;
				b[1][0]++;
			} else {
				a[2][1]++;
				b[2][1]++;
			}
		}
		N--;
	} 
	
	printf("%d %d %d\n", sum(a, 0), sum(a, 1), sum(a, 2));
	printf("%d %d %d\n", sum(b, 0), sum(b, 1), sum(b, 2));
	
	res(a);
	printf(" ");
	res(b);
	
	return 0;
} 
