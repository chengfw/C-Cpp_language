/* 1026程序运行时间 
	要获得一个 C 语言程序的运行时间，常用的方法是调用头文件 time.h，
    其中提供了 clock() 函数，可以捕捉从程序开始运行到 clock() 被调用时所耗费的时间。
    这个时间单位是 clock tick，即“时钟打点”。同时还有一个常数 CLK_TCK，给出了机器时钟每秒所走的时钟打点数。
    于是为了获得一个函数 f 的运行时间，我们只要在调用 f 之前先调用 clock()，获得一个时钟打点数 C1；
    在 f 执行完成后再调用 clock()，获得另一个时钟打点数 C2；两次获得的时钟打点数之差 (C2-C1) 就是 f 运行所消耗的时钟打点数，
    再除以常数 CLK_TCK，就得到了以秒为单位的运行时间。
    这里不妨简单假设常数 CLK_TCK 为 100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。
   输入格式：在一行中顺序输入2个整数C1和C2.
   注意：两次获得的时钟打点数肯定不同，即C1<C2，并且取值在[0,10^7].
   输出格式：在一行中输出被测函数运行的时间。运行时间必须按照"hh:mm:ss"格式输出；
   不足一秒的时间四舍五入到s 
*/
#include<stdio.h>
int main() {
	int C1, C2;
	scanf("%d %d", &C1, &C2);
	int time = C2 - C1;
	if(time%100 >= 50) {
		time = time / 100 +1;
	} else {
		time /= 100;
	}
	printf("%02d:%02d:%02d\n", time/3600, (time%3600)/60, (time%3600)%60); //(time%3600)%60 代表秒可以用 time%60 替代 
	return 0;
} 
