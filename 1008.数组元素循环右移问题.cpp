/*1008数组元素循环右移问题
一个数组A中存有N（>0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置
（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？ 
输入格式:每个输入包含一个测试用例，第1行输入N（1≤N≤100）和M（≥0）；第2行输入N个整数，之间用空格分隔。
输出格式:在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。 
*/ 
#include<stdio.h>
int main() {
	int a[200], n;
	int m;  
	scanf("%d %d", &n, &m);  //数组有n个数，右移m个位置
	if(n < m) {   //注意：可能存在 n < m,需读入 n 和 m 后令  m = m % n; 
	              //依据：对一个长度为N的序列，右移N位之后的序列和当前序列是相同的 
		m = m % n;
	}
	for(int i=0; i<n; i++) {
		scanf("%d", &a[i]);
	}
	for(int i=n-1; i>=0; i--) {
		a[i+m] = a[i];
	}
	for(int i=n, j=0; i<n+m; i++, j++) {
		a[j] = a[i];
	}
	for(int i=0; i<n; i++) {
		printf("%d", a[i]);
		if(i != n-1) {
			printf(" ");
		}
	}
		return 0;
} 
